install.packages("fmsb")
library(lattice)
setwd("~/Documents/tcr")
grades <- read.csv("grades.csv")
View(grades)
boxplotByCake <- function (cakeName, initData){
data <- initData[which (initData$cake==cakeName),]
priceByCookie<-round(data$price[1]/data$nb.of.cookies[1],2)
par(mar=c(4,4,4,4))
boxplot(data$aspect, data$taste, data$texture, data$packaging, data$qualityByPrice, lim=c(0,4), names=names(data[5:9]),
cex = 0.5, ylab="note", main=paste(cakeName, "grades from 0 to 4"), col=rainbow(5))
text(0.7, 3.9, paste("Price:", data$price[1], "€
Nb of cookies:", data$nb.of.cookies[1], "
Price by cookie:", priceByCookie,"€"))
}
boxplotByCake("pitch pepites", grades)
boxplotByCake <- function (cakeName, initData){
data <- initData[which (initData$cake==cakeName),]
priceByCookie<-round(data$price[1]/data$nb.of.cookies[1],2)
par(mar=c(4,4,4,4))
boxplot(data$aspect, data$taste, data$texture, data$packaging, data$qualityByPrice, lim=c(0,4), names=names(data[5:9]),
cex = 0.5, ylab="note", main=paste(cakeName, "grades from 0 to 4"), col=rainbow(5))
text(0.7, 3.9, paste("Price:", data$price[1], "€
Nb of cookies:", data$nb.of.cookies[1], "
Price by cookie:", priceByCookie,"€"))
}
boxplotByCake("churros con choc", grades)
locator(1)
boxplotByCake <- function (cakeName, initData){
data <- initData[which (initData$cake==cakeName),]
priceByCookie<-round(data$price[1]/data$nb.of.cookies[1],2)
par(mar=c(4,4,4,4))
boxplot(data$aspect, data$taste, data$texture, data$packaging, data$qualityByPrice, lim=c(0,4), names=names(data[5:9]),
cex = 0.5, ylab="note", main=paste(cakeName, "grades from 0 to 4"), col=rainbow(5))
text(0.7, 1.7, paste("Price:", data$price[1], "€
Nb of cookies:", data$nb.of.cookies[1], "
Price by cookie:", priceByCookie,"€"))
}
boxplotByCake("churros con choc", grades)
boxplotByCake <- function (cakeName, initData){
data <- initData[which (initData$cake==cakeName),]
priceByCookie<-round(data$price[1]/data$nb.of.cookies[1],2)
par(mar=c(4,4,4,4))
boxplot(data$aspect, data$taste, data$texture, data$packaging, data$qualityByPrice, lim=c(0,4), names=names(data[5:9]),
cex = 0.5, ylab="note", main=paste(cakeName, "grades from 0 to 4"), col=rainbow(5))
text(0.6, 1.7, paste("Price:", data$price[1], "€
Nb of cookies:", data$nb.of.cookies[1], "
Price by cookie:", priceByCookie,"€"))
}
boxplotByCake("churros con choc", grades)
boxplotByCake <- function (cakeName, initData){
data <- initData[which (initData$cake==cakeName),]
priceByCookie<-round(data$price[1]/data$nb.of.cookies[1],2)
par(mar=c(4,4,4,4))
boxplot(data$aspect, data$taste, data$texture, data$packaging, data$qualityByPrice, lim=c(0,4), names=names(data[5:9]),
cex = 0.5, ylab="note", main=paste(cakeName, "grades from 0 to 4"), col=rainbow(5))
text(0.6, 1.8, paste("Price:", data$price[1], "€
Nb of cookies:", data$nb.of.cookies[1], "
Price by cookie:", priceByCookie,"€"))
}
boxplotByCake("churros con choc", grades)
boxplotByCake <- function (cakeName, initData){
data <- initData[which (initData$cake==cakeName),]
priceByCookie<-round(data$price[1]/data$nb.of.cookies[1],2)
par(mar=c(4,4,4,4))
boxplot(data$aspect, data$taste, data$texture, data$packaging, data$qualityByPrice, lim=c(0,4), names=names(data[5:9]),
cex = 0.5, ylab="note", main=paste(cakeName, "grades from 0 to 4"), col=rainbow(5))
text(0.8 1.8, paste("Price:", data$price[1], "€
Nb of cookies:", data$nb.of.cookies[1], "
Price by cookie:", priceByCookie,"€"))
}
boxplotByCake("churros con choc", grades)
boxplotByCake <- function (cakeName, initData){
data <- initData[which (initData$cake==cakeName),]
priceByCookie<-round(data$price[1]/data$nb.of.cookies[1],2)
par(mar=c(4,4,4,4))
boxplot(data$aspect, data$taste, data$texture, data$packaging, data$qualityByPrice, lim=c(0,4), names=names(data[5:9]),
cex = 0.5, ylab="note", main=paste(cakeName, "grades from 0 to 4"), col=rainbow(5))
text(0.8, 1.8, paste("Price:", data$price[1], "€
Nb of cookies:", data$nb.of.cookies[1], "
Price by cookie:", priceByCookie,"€"))
}
boxplotByCake("churros con choc", grades)
boxplotByCake <- function (cakeName, initData){
data <- initData[which (initData$cake==cakeName),]
priceByCookie<-round(data$price[1]/data$nb.of.cookies[1],2)
par(mar=c(4,4,4,4))
boxplot(data$aspect, data$taste, data$texture, data$packaging, data$qualityByPrice, lim=c(0,4), names=names(data[5:9]),
cex = 0.5, ylab="note", main=paste(cakeName, "grades from 0 to 4"), col=rainbow(5))
text(0.8, 1.6, paste("Price:", data$price[1], "€
Nb of cookies:", data$nb.of.cookies[1], "
Price by cookie:", priceByCookie,"€"))
}
boxplotByCake("churros con choc", grades)
unique(cakename)
str (grades)
unique(cake)
unique(cake$grades)
unique(gardes$cake)
unique(grades$cake)
length(unique(grades$cake))
length <- length(unique(grades$cake))
cakelisy[length]
cakelist[length]
cakeList[length]
cakeList <- unique(grades$cake)
cakeList[length]
for i in cakeList{
print (i)
boxplotByCake(i, grades)
}
for (i in cakeList){
print (i)
boxplotByCake(i, grades)
}
#csn=onecanal, ptn=onecanal*3
gpi=c(8.17747045e+01, 8.17747045e+01, 8.17747045e+01, 8.17747045e+01, 8.17747045e+01, 1.70441464e-06, 8.17747045e+01, 8.17747045e+01, 8.17747045e+01, 8.17747045e+01)
par(mfrow = c(3,1), mar=c(2,4,2,2))
barplot(onecanal*3, col="cornflowerblue", xlab="(Hz)", main= "PTN activity")
barplot(onecanal, col="lightgreen", xlab="(Hz)", main= "CSN activity")
barplot(gpi, col="lightyellow", xlab="(Hz)", main= "activité en sortie du GPi")
saliences<-c(0.069894, 0.285123, 0.955757, 1.346649, 1.893996, 1.997799, 1.467718, 0.823954, 0.383935, 0.029471)
onecanal<-c(2,2,2,2,2,10,2,2,2,2)
#csn=onecanal, ptn=onecanal*3
gpi=c(8.17747045e+01, 8.17747045e+01, 8.17747045e+01, 8.17747045e+01, 8.17747045e+01, 1.70441464e-06, 8.17747045e+01, 8.17747045e+01, 8.17747045e+01, 8.17747045e+01)
par(mfrow = c(3,1), mar=c(2,4,2,2))
barplot(onecanal*3, col="cornflowerblue", xlab="(Hz)", main= "PTN activity")
barplot(onecanal, col="lightgreen", xlab="(Hz)", main= "CSN activity")
barplot(gpi, col="lightyellow", xlab="(Hz)", main= "activité en sortie du GPi")
#csn=onecanal
gpi=c(6.71926191e+01, 6.71926191e+01, 6.71926191e+01, 6.71926191e+01, 6.71926191e+01, 8.57994449e-06, 6.71926191e+01, 6.71926191e+01, 6.71926191e+01, 6.71926191e+01)
par(mfrow = c(3,1), mar=c(2,4,2,2))
barplot(rep(15,10), col="cornflowerblue", xlab="(Hz)", main= "PTN activity")
barplot(onecanal, col="lightgreen", xlab="(Hz)", main= "CSN activity")
barplot(gpi, col="lightyellow", xlab="(Hz)", main= "activité en sortie du GPi")
#ptn=csn=saliences
gpi=c(55.06848168, 52.87995813, 45.51417222, 40.89727889, 34.17588308, 32.88424783, 39.43056405, 47.02219482, 51.84525568, 55.46935066)
par(mfrow = c(3,1), mar=c(2,4,2,2))
barplot(saliences, col="cornflowerblue", xlab="(Hz)", main= "PTN activity")
barplot(saliences, col="lightgreen", xlab="(Hz)", main= "CSN activity")
barplot(gpi, col="lightyellow", xlab="(Hz)", main= "activité en sortie du GPi")
#csn = saliences, ptn=saliences*15
gpi=c(113.91037184, 109.01663115, 91.78886243, 80.50355495, 63.67648353, 60.42252311, 76.86092127, 95.40212397, 106.66460651, 114.79444447)
par(mfrow = c(3,1), mar=c(2,4,2,2))
barplot(saliences*15, col="cornflowerblue", xlab="(Hz)", main= "PTN activity")
barplot(saliences, col="lightgreen", xlab="(Hz)", main= "CSN activity")
barplot(gpi, col="lightyellow", xlab="(Hz)", main= "activité en sortie du GPi")
#csn=saliences
gpi=c(88.71470729, 85.30534573, 73.71187941, 66.35496363, 55.52988701, 53.43531835, 64.00396504, 76.10010857, 83.68775576, 89.33741601)
par(mfrow = c(3,1), mar=c(2,4,2,2))
barplot(rep(15,10), col="cornflowerblue", xlab="(Hz)", main= "PTN activity")
barplot(saliences, col="lightgreen", xlab="(Hz)", main= "CSN activity")
barplot(gpi, col="lightyellow", xlab="(Hz)", main= "activité en sortie du GPi")
